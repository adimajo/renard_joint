default:
  image: python:3.8-slim

stages:
  - lint
  - test
  - document
  - build
  - test installed scripts
  - api

variables:
  the_proxy: "http://host.docker.internal:3128"

.before_script_template:
  before_script:
    - pip3 install pipenv

lint:
  extends: .before_script_template
  stage: lint
  script:
  - pipenv run pip install flake8
  # stop the build if there are Python syntax errors or undefined names
  - pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  - pipenv run flake8 --ignore=W504 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

test:
  extends: .before_script_template
  stage: test
  variables:
    DATA: "/the_data/data/"
    MODEL: "/the_data/model/"
    PYTHONPATH: '.'
    GITLAB: 1
  script:
  - pipenv install -d --skip-lock
  - pipenv run coverage run --source renard_joint,_scripts -m pytest -rxXs
  - pipenv run coverage report
  - pipenv run bandit -r renard_joint
  - pipenv run python renard_joint/_scripts/pipeline.py conll04 evaluate
  - pipenv run python renard_joint/_scripts/pipeline.py internal evaluate
  - pipenv run python renard_joint/_scripts/pipeline.py conll04 predict "Adrien tries data harvesting" "It's probably working"
  - pipenv run python renard_joint/_scripts/pipeline.py internal predict "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run python renard_joint/_scripts/spert.py conll04 evaluate 19
  - pipenv run python renard_joint/_scripts/spert.py scierc evaluate 19
  - pipenv run python renard_joint/_scripts/spert.py internal evaluate 26
  - pipenv run python renard_joint/_scripts/spert.py conll04 predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run python renard_joint/_scripts/spert.py scierc predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run python renard_joint/_scripts/spert.py internal predict 26 "Dirty company does bad coal activity" "Nice company treats people equally"
#  - pipenv run python _scripts/spert.py conll04 train
#  - pipenv run python _scripts/spert.py scierc train
#  - pipenv run python _scripts/spert.py internal train

#document:
#  image: docker:20.10.5-dind
#  services:
#    - name: docker:dind
#      entrypoint: ["env", "-u", "DOCKER_HOST"]
#      command: ["dockerd-entrypoint.sh"]
#  stage: document
#  script:
#    - apk update
#    - apk --no-cache add py3-pip gcc build-base freetype-dev libpng-dev openblas-dev lapack libstdc++
#    - apk --no-cache add --virtual .builddeps g++ gfortran musl-dev lapack-dev
#    - apk --no-cache add python3 cargo py3-scipy libpq uwsgi-python3 python3-dev alpine-sdk proj proj-dev proj-util bash openssh curl ca-certificates openssl less htop make wget rsync libexecinfo-dev libgomp libgcc libquadmath musl libgfortran
#    - apk --no-cache add python3 py3-scipy libpq uwsgi-python3 python3-dev alpine-sdk proj proj-dev proj-util bash openssh curl ca-certificates openssl less htop make wget rsync libexecinfo-dev libgomp libgcc libquadmath musl libgfortran
#    - apk --no-cache add libxml2-dev libxslt-dev libffi-dev openssl-dev
#    - apk --no-cache add jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev tcl-dev rust
#    - export CARGO_HTTP_CHECK_REVOKE=false
#    - pip3 install --upgrade pip
#    - pip3 install pipenv
#    - pip3 install setuptools_rust
#    - pip3 install tokenizers
#    - pipenv install -d --skip-lock
#    - cd docs
#    - pipenv run make html
#  - docker run -v "html":/web -p 8000:8000 --name sphinx-server dldl/sphinx-server
#  - docker save sphinx-server > data_harvesting_docs.tar
#  artifacts:
#    paths:
#      - data_harvesting_docs.tar
#    expire_in: 1 week
#  needs: ["test"]

document:
  extends: .before_script_template
  stage: document
  variables:
    DATA: "/the_data/data/"
    MODEL: "/the_data/model/"
    PYTHONPATH: '.'
  script:
    - pipenv install -d --skip-lock
    - cd docs
    - apt update
    - apt install -y build-essential
    - pipenv run make html
  artifacts:
    paths:
      - docs/build/html
    expire_in: 1 week

build:
  extends: .before_script_template
  stage: build
  script:
  - pipenv install --skip-lock
  - pipenv run pip freeze > requirements.txt
  - pipenv run python3 setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist
    expire_in: 1 week

test_install:
  extends: .before_script_template
  stage: test installed scripts
  script:
  - pipenv install --skip-lock
  - pipenv run pip freeze > requirements.txt
  - pipenv install .
  - pipenv run pipeline conll04 evaluate
  - pipenv run pipeline internal evaluate
  - pipenv run pipeline conll04 predict "Adrien tries data harvesting" "It's probably working"
  - pipenv run pipeline internal predict "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run spert conll04 evaluate 19
  - pipenv run spert scierc evaluate 19
  - pipenv run spert internal evaluate 26
  - pipenv run spert conll04 predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run spert scierc predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
  - pipenv run spert internal predict 26 "Dirty company does bad coal activity" "Nice company treats people equally"
#  - pipenv run python spert.py conll04 train
#  - pipenv run python spert.py scierc train
#  - pipenv run python spert.py internal train

api:
  stage: api
  image: docker:20.10.5-dind
  services:
    - name: docker:dind
      alias: docker
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  script:
  - cd API
  - docker build --build-arg the_proxy=$the_proxy -t data_harvesting_api:latest .
  - docker save data_harvesting_api:latest > data_harvesting_api.tar
  artifacts:
    paths:
      - API/data_harvesting_api.tar
    expire_in: 1 week
