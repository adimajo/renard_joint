# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        fetch-depth: 0
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev --skip-lock
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 --ignore=W504 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    - name: Test with coverage and pytest
      run: |
        mkdir model && cd model
        mkdir spert && mkdir ner && mkdir re && cd spert
        mkdir internal && cd internal && wget https://ufile.io/dse7uk5v && cd ..
        mkdir conll04 && cd conll04 && wget https://ufile.io/0gug8or2 && cd ..
        mkdir scierc && cd scierc && wget https://ufile.io/pf9ks53h && cd ../../ner
        mkdir internal && cd internal && wget https://ufile.io/bxsmnvtw
        mkdir conll04 && cd conll04 && wget https://ufile.io/j0ff5qrz && cd ../../..
        pipenv run coverage run --source renard_joint -m pytest -rxXs
        pipenv run bandit -r renard_joint
        pipenv run python renard_joint/_scripts/pipeline.py conll04 evaluate
        pipenv run python renard_joint/_scripts/pipeline.py internal evaluate
        pipenv run python renard_joint/_scripts/pipeline.py conll04 predict "Adrien tries data harvesting" "It's probably working"
        pipenv run python renard_joint/_scripts/pipeline.py internal predict "Dirty company does bad coal activity" "Nice company treats people equally"
        pipenv run python renard_joint/_scripts/spert.py conll04 evaluate 19
        pipenv run python renard_joint/_scripts/spert.py scierc evaluate 19
        pipenv run python renard_joint/_scripts/spert.py internal evaluate 26
        pipenv run python renard_joint/_scripts/spert.py conll04 predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
        pipenv run python renard_joint/_scripts/spert.py scierc predict 19 "Dirty company does bad coal activity" "Nice company treats people equally"
        pipenv run python renard_joint/_scripts/spert.py internal predict 26 "Dirty company does bad coal activity" "Nice company treats people equally"
#       pipenv run python _scripts/spert.py conll04 train
#       pipenv run python _scripts/spert.py scierc train
#       pipenv run python _scripts/spert.py internal train
    - name: Vulnerability
      run: |
        pipenv run bandit -r renard_joint
    - name: Document
      run: |
        cd docs
        pipenv run make html
    - name: Build and Commit
      uses: sphinx-notes/pages@master
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages
    - name: Build and check package
      run: |
        pipenv run pipenv-setup sync --dev
        pipenv run pip install --upgrade keyring keyrings.alt
        python setup.py build sdist bdist_wheel
        pipenv run twine check dist/*
